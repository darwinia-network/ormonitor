events { }

http {
    include       mime.types;
    default_type  application/octet-stream;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;
    gzip_min_length 5k;

    access_log    /var/log/nginx/access.log;
    error_log     /var/log/nginx/error.log;

    sendfile        on;
    keepalive_timeout  65;

    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    upstream backend {
        server server:8000;
        # server server:8000 max_fails=3 fail_timeout=10s;
        # server server-bk:8000 backup;
    }

    server {
        listen       80;
        server_name  ${DOMAIN};

        return 301 https://$host$request_uri;
    }

    server {
        listen       443 ssl;
        server_name  ${DOMAIN};

        ssl_certificate     /etc/nginx/${DOMAIN}.pem;
        ssl_certificate_key /etc/nginx/${DOMAIN}.key;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;

        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;

        ssl_prefer_server_ciphers on;

        location / {
            root   /usr/share/nginx/html;
            index  index.html;
            try_files $uri $uri/ /index.html;
        }

        location /static/ {
            expires 5d;
            add_header Cache-Control "public, no-transform";
            alias /usr/share/nginx/html/static/;
        }

        location /api {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            
            limit_req zone=mylimit burst=20 nodelay;

            proxy_pass http://backend/api;

            add_header 'Access-Control-Allow-Origin' '${DOMAIN}';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
}
